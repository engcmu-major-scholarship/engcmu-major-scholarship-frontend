import useConsiderScholarshipController from './useConsiderScholarshipController';
import './toggle.css';
import React, { useState } from 'react';
import { ApplicationInfo } from './useConsiderScholarshipController';

const ConsiderScholarship = () => {
  const {
    scholarships,
    filterResults,
    filterText,
    setFilterText,
    yearSemesters,
    currentYearSemester,
    selectedYearSemester,
    setSelectedYearSemester,
    approveApplication,
  } = useConsiderScholarshipController();

  const [popupApplication, setPopupApplication] =
    useState<ApplicationInfo | null>(null);
  const [comment, setComment] = useState('');

  const togglePopup = (appId: number | null) => {
    if (appId === null) {
      setPopupApplication(null);
      console.log('null!');
      return;
    }

    const selectedApp =
      filterResults.find((app) => app.appId === appId) || null;
    setPopupApplication(selectedApp);
    setComment(''); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô‡∏ó‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î popup ‡πÉ‡∏´‡∏°‡πà
  };

  const [selectedYear, setSelectedYear] = useState<number>(
    currentYearSemester?.year ?? 2567,
  );
  const [selectedSemester, setSelectedSemester] = useState<number>(
    currentYearSemester?.semester ?? 2,
  );

  const handleApproveWithConfirmation = () => {
    const isConfirmed = window.confirm(
      'Are you sure you want to approve this application?',
    );
    if (isConfirmed) {
      handleApprove(); // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handleApprove
    }
  };

  const handleApprove = async () => {
    if (popupApplication && popupApplication.appId) {
      try {
        togglePopup(null); // ‡∏õ‡∏¥‡∏î popup ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        await approveApplication(popupApplication.appId, comment);
        window.alert('‚úÖ Application approved successfully!'); // ‡πÅ‡∏™‡∏î‡∏á alert
      } catch (error) {
        window.alert('‚ùå Failed to approve application'); // ‡∏ñ‡πâ‡∏≤ error
      }
    } else {
      window.alert('no application'); // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ß‡πà‡∏≤‡∏á
    }
  };

  return (
    <div>
      <h1
        style={{
          display: 'flex',
          marginLeft: '150px',
          fontSize: '36px',
          marginBottom: '0px',
          marginTop: '100px',
        }}
      >
        üë•‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏ô
      </h1>

      <div
        style={{
          display: 'flex',
          marginLeft: '150px',
        }}
      >
        <div
          style={{
            // display: 'flex',
            padding: '10px',
            width: '249px',
            border: '2px solid black', // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏£‡∏≠‡∏ö
            borderRadius: '50px', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏£

            marginBottom: '30px',
            marginTop: '10px',
          }}
        >
          <select
            value={filterText}
            onChange={(e) => setFilterText(e.target.value)}
            style={{
              width: '225px',
            }}
          >
            <option value="">-- Select Scholarship --</option>
            {/* {scholarships.map((scholarship, index) => (
              <option key={index} value={scholarship.name}>
                {scholarship.name}
              </option> */}
            {scholarships.map((scholarship) => (
              <option key={scholarship.id} value={scholarship.name}>
                {scholarship.name}
              </option>
            ))}
          </select>
        </div>
        <div
          style={{
            // display: 'flex',
            padding: '10px',
            width: '249px',
            border: '2px solid black', // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏£‡∏≠‡∏ö
            borderRadius: '50px', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏£
            marginLeft: '50px',
            marginBottom: '30px',
            marginTop: '10px',
          }}
        >
          <select
            value={`${selectedYear}/${selectedSemester}`}
            onChange={(e) => {
              const [year, semester] = e.target.value.split('/').map(Number);
              setSelectedYear(year);
              setSelectedSemester(semester);
              setSelectedYearSemester({ year, semester });
            }}
            style={{ width: '225px' }}
          >
            {yearSemesters.map((ys) =>
              ys.semesters.map((semester) => (
                <option
                  key={`${ys.year}/${semester}`}
                  value={`${ys.year}/${semester}`}
                >
                  {ys.year}/{semester}
                </option>
              )),
            )}
          </select>
        </div>
      </div>
      <table
        style={{
          marginLeft: '150px',
          width: '100%',
          height: '100px',
          borderCollapse: 'collapse',
          fontFamily: 'Arial, sans-serif',
          border: '2px solid #FFFFFF',
        }}
      >
        <thead>
          <tr style={{ backgroundColor: '#B7CDCF', textAlign: 'left' }}>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏ó‡∏∏‡∏ô
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡πÄ‡∏Ñ‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡πâ‡∏ß
            </th>
            <th style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
              ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </th>
          </tr>
        </thead>
        <tbody>
          {filterResults.map((application, index) => (
            <tr
              key={index}
              style={{
                backgroundColor: index % 2 === 0 ? '#FFFFFF' : '#DBE9EA', // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà
              }}
            >
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {application.studentId}
              </td>
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {application.firstName + ' ' + application.lastName}
              </td>
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {application.scholarName}
              </td>
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {selectedYear}/{selectedSemester}
              </td>
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {application.requestAmount}
              </td>
              <td style={{ padding: '10px', border: '1px solid #FFFFFF' }}>
                {application.isFirstTime === true ? 'No' : 'Yes'}
              </td>
              <td
                style={{
                  padding: '10px',
                  border: '1px solid #FFFFFF',
                  textAlign: 'center',
                }}
              >
                <button onClick={() => togglePopup(application.appId)}>
                  üëÅ
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Popup */}
      {popupApplication && (
        <div
          style={{
            position: 'fixed',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            backgroundColor: 'white',
            padding: '20px',
            boxShadow: '0px 0px 10px rgba(0,0,0,0.2)',
            borderRadius: '10px',
            width: '1100px',
          }}
        >
          <h1
            style={{
              justifyContent: 'center',
              alignItems: 'center',
              display: 'center',
              textAlign: 'center',
              // marginLeft: '10px',
              fontSize: '36px',
              marginBottom: '10px',
              marginTop: '10px',
            }}
          >
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
          </h1>
          <p>
            <strong>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤:</strong> {popupApplication.studentId}
          </p>
          <p>
            <strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {popupApplication.firstName}{' '}
            {popupApplication.lastName}
          </p>
          <p>
            <strong>‡∏ó‡∏∏‡∏ô:</strong> {popupApplication.scholarName}
          </p>
          {/* <p>
            <strong>‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</strong> {popupApplication.scholarName}
          </p> */}
          <p>
            <strong>‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤:</strong>{' '}
            {selectedYearSemester
              ? `${selectedYearSemester.year}/${selectedYearSemester.semester}`
              : 'N/A'}
          </p>
          <p>
            <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠:</strong> {popupApplication.requestAmount}
          </p>
          <p>
            <strong>‡πÄ‡∏Ñ‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡πâ‡∏ß:</strong>{' '}
            {popupApplication.isFirstTime ? 'No' : 'Yes'}
          </p>

          <button
            onClick={() => {
              if (popupApplication?.docLink) {
                window.open(popupApplication.docLink, '_blank');
              } else {
                alert('Document link is not available.');
              }
            }}
          >
            <p>
              <strong style={{ color: '#345814' }}>‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏ôüîó</strong>
            </p>
          </button>

          <textarea
            placeholder="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå..."
            value={comment}
            onChange={(e) => setComment(e.target.value)}
            style={{
              width: '100%',
              height: '150px',
              marginTop: '10px',
              border: '1px solid #000000', // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤
              borderRadius: '5px', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏∏‡∏°‡∏Å‡∏•‡∏°
              padding: '10px', // ‡πÄ‡∏û‡∏¥‡πà‡∏° padding ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô
              fontSize: '16px', // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            }}
          />

          <div
            style={{
              display: 'flex',
              justifyContent: 'space-between',
              marginTop: '10px',
            }}
          >
            <button
              onClick={() => togglePopup(null)}
              style={{
                backgroundColor: '#F8D2C7',
                padding: '10px',
                borderRadius: '10px',
              }}
            >
              Cancel
            </button>
            <button
              onClick={handleApproveWithConfirmation}
              style={{
                backgroundColor: '#4CAF50',
                color: 'white',
                padding: '10px',
                borderRadius: '10px',
              }}
            >
              Approve
            </button>
          </div>
        </div>
      )}
    </div>

    // </div>
  );
};

export default ConsiderScholarship;
